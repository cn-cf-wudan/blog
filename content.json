[{"title":"博客构建（二）","date":"2017-06-23T00:45:47.000Z","path":"2017/06/23/博客构建（二）/","text":"今天有时间来折腾一下博客的主题。官方的主题地址，这里面有很多主题，我是用的是 indigo，这个主题比较精炼，最主要的是有比较详细的配置说明，比较适合第一次折腾主题的我。折腾过程主要参考 indigo博客主题的详细配置。闲话少说，我们开始把。 安装下载主题在主题的github上打包下载： 下载主题 结束之后把主题相关文件解压到到D:\\hexo\\themes\\indigo中 主题文件 安装插件安装之前一定要确认，hexo版本大于3.0 node大于6.0，不要问我为什么，因为我第一次装的时候node是4.2.x，结果悲剧了。1234567npm install hexo-renderer-less --savenpm install hexo-generator-feed --savenpm install hexo-generator-json-content --savenpm install hexo-helper-qrcode --save 启用主题打开根配置文件D:\\hexo\\_config.yml，修改主题为indigo，注意indigo为刚刚下载的主题文件目录的名称。 12# Extensionstheme: indigo 开启标签页1hexo new page tags 修改 hexo/source/tags/index.md 的元数据 1234---layout: tagscomments: false--- 开启分类页注意：这个选项只支持card模式，也就是这个主题分了两个版本，一个是card模式，一个是普通模式，分别在项目的不同分支上。1hexo new page categories 修改 hexo/source/categories/index.md 的元数据 1234---layout: categoriescomments: false--- 启动本地预览在hexo文件夹下执行： 1hexo s --debug 来进行验证，这个命令会在本地启动hexo服务起进行预览，启动成功之后，访问地址 http://localhost:4000，可以看到本地的预览效果。额，当然，如果你看了上一篇博客并改了 123456# URL## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;url: http://yoursite.comroot: /blogpermalink: :year/:month/:day/:title/permalink_defaults: 这是改了之后的访问地址是http://localhost:4000/blog，很好，我在本地看到了新的主题已经生效了，so far so good。 本地预览 站点配置基本设置根_config.yml,我的位置在D:\\hexo\\_config.yml 注意：通常来说我们把hexo\\_config.yml称为根config，hexo\\themes\\indigo\\_config.yml称为主题config 12345# Sitetitle: Journey&apos;s Blogauthor: Journeykeywords: hexo java akka cqrs email: wu_d1989@163.com 从上往下一次是网站标题，作者，关键字（便于搜索引擎收录），邮箱。 feed配置feed使用来生成xml文档供rss订阅用的插件，在根_config.yml中添加 12345#rssfeed: type: atom path: atom.xml limit: 50 jsonContent配置这部分配置是用来做站内搜索用的，为了节约资源，可以对 jsonContent 插件生成的数据字段进行配置，减少数据文件大小。jsonContent配置 12345678910111213141516171819#jsonContentjsonContent: meta: false pages: false posts: title: true date: true path: true text: true raw: false content: false slug: false updated: false comments: false link: false permalink: false excerpt: false categories: false tags: true 主题配置菜单配置还记得主题配置文件的路径吗？别和站点配置的搞混哦。 1234567891011121314151617181920212223menu: home: text: 主页 url: / archives: text: 时间轴 url: /archives tags: text: 标签 url: /tags th-list: text: 分类 url: /categories github: url: https://github.com/cn-cf-wudan target: _blank weibo: text: 微博 url: http://weibo.com/u/5309740295/home target: _blank rss: text: 订阅 url: /atom.xml 添加新菜单项时，在 menu 下增加子属性即可。属性说明如下： 12345menu: link: # fontawesome图标，省略前缀，本主题前缀为 icon-，必须 text: About # 菜单显示的文字，如果省略即默认与图标一致，首字母会转大写 url: /about # 链接，绝对或相对路径，必须 target: _blank # 是否跳出，省略则在当前页面打开 fontawesome 图标已集成到主题中，你可以到这里挑选图标。 favicon站点显示的图标，会显示在浏览器标签页上。 12# faviconfavicon: /img/fa.ico 注意:设置完之后需要把fa.ico放置在D:\\hexo\\themes\\indigo\\source\\img目录中 头像 注意:设置完之后需要把avatar.jpg放置在D:\\hexo\\themes\\indigo\\source\\img目录中1avatar: /img/avatar.jpg email1email: wu_d1989@163.com 页面标题 (card theme)和menu保持一致 1234# 页面标题tags_title: 标签archives_title: 时间轴categories_title: 分类 文章打赏 注意:设置完之后需要wechat.jpg和alipay.jpg放置在D:\\hexo\\themes\\indigo\\source\\img目录中1234reward: title: 感谢您的支付，哦不，支持。 wechat: /img/wechat.jpg #微信，关闭设为 false alipay: /img/alipay.jpg #支付宝，关闭设为 false 此外在 crad theme 中，可以通过在 markdown 头部添加 reward: false 来控制某些不想开启打赏的页面。 其他设置及问题这里还有很多其他的设置项和常见问题，我的设置也是参考作者的文档，其他的我就不一一列举了，有兴趣的去作者github上看吧。","tags":[{"name":"博客","slug":"博客","permalink":"http://yoursite.com/tags/博客/"},{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"},{"name":"nodejs","slug":"nodejs","permalink":"http://yoursite.com/tags/nodejs/"},{"name":"git","slug":"git","permalink":"http://yoursite.com/tags/git/"},{"name":"indigo","slug":"indigo","permalink":"http://yoursite.com/tags/indigo/"}]},{"title":"博客构建（一）","date":"2017-06-22T07:33:33.000Z","path":"2017/06/22/博客构建（一）/","text":"相关介绍最近打算自己搞一个自己的博客，看了网络上很多实现方式，最终选择了hexo+oschina的方式。网上大部分都是hexo+github的方式，我之所以不选择github的原因有两个： github在国内的访问速度实在是 呵呵（前些日子居然还被墙过……） 百度爬虫对github收录的好像也不是很好 简单的介绍一下原理。hexo是一个专门的博客框架，可以把普通的markdown语法的文档转换成静态的html文档，并且可以自己定制个性化的主题。那么oschina和github又扮演的什么角色呢？很简单就是可以把hexo生成的静态页面做为项目托管在上述两个平台上。这两个平台都提供了pages功能，用来把你托管的项目部署成可以访问的网站。 hexo oschina github 环境准备本人的操作系统是win10 专业版，目前还没有在mac上搞过这个有机会再补充mac版本的。 安装nodejshexo的安装需要nodejs环境，所以我们这里先安装nodejs。 安装nodejs 一路next不需多说，注意选择一下安装路径就行了。 node -v 检查一下是否安装成功。 node version 安装githexo本地编译出博客的静态文件之后需要通过git上传到oschina或github上，所以我们需要安装 git这里我安装的是一个git的图形工具，不过这个好像被墙了，我当时是翻墙安装的，当然这个不重要，你也可以去安装git官方版本。这里我以前已经安装过，图我就不贴了，都是一路next。 git –version 检查安装是否成功。 giit --version 安装hexo首先安装hexo的脚手架工具，联网的情况下： npm install hexo-cli -g hexo-cli 这中间根据网速的快慢，可能需要一会儿。 继续安装hexo npm install hexo –save hexo hexo -v 检查一下hexo安装情况 hexo version 注册oschina具体注册流程不再说了（其实是因为我早就注册过了，没法提供截图了） 创建项目 创建项目 创建项目 开启pages 开启pages功能 开启pages功能 创建本地hexo项目首先新建一个空白的文件夹，从cmd进入该目录（我这里是D:\\hexo），输入： hexo init hexo init 接着安装本地项目，还是在(D:\\hexo)执行 npm install 接着安装hexo git 部署插件，用来把本地生成的静态文件上传到oschina的插件。 npm install hexo-deployer-git –save hexo-deployer-git 修改本地hexo工程的配置文件D:\\hexo\\_config.yml，在配置文件的最下面： _config.yml 这其中的repo就是4中创建的项目的git地址，可以这样获得： image hexo d -g 编译本地hexo项目生成html文件并上传到oschina，这个过程中可能会需要输入oschina账号密码，github也是一样的，会要求你输入github账号密码。 hexo d -g 上传结束如图： 上传结果 接下来打开浏览器访问4中开启pages功能的地址： 访问 你看到的可能和我的略有不同，初始hexo项目里只有一个hell world的博客文章，我这个是已经添加了自己文章的首页。 博客首页 ok，至此博客搭建的第一步算是成功了，后面会继续更新如何编写自己的博文，以及折腾一些主题什么的东西。 奥，这里还有一个问题，如果你访问博客后发现[css/js]什么的都加载不出来，还需要修改_config.yml中的 路径问题修改 这里的root:/blog就是http://journey1989.oschina.io/blog中域名后面的部分.","tags":[{"name":"博客","slug":"博客","permalink":"http://yoursite.com/tags/博客/"},{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"},{"name":"nodejs","slug":"nodejs","permalink":"http://yoursite.com/tags/nodejs/"},{"name":"git","slug":"git","permalink":"http://yoursite.com/tags/git/"}]},{"title":"博客元年","date":"2017-06-22T07:28:38.000Z","path":"2017/06/22/博客元年/","text":"1. 写在开始2017年对于我个人来说是一个奇怪的开始，自从开年以来一路唱衰。诸事不顺，倒霉的事情多了，难免会开始怀疑自己。最近开始试着静下心来认真的思考一些事情，诚然一大堆的烦心事儿有些是自找的，有些也确实是自身的问题，当然也确实有一些是自己的运气有点儿背。不过这些都不重要，重要的是经过这几个月的折腾，多少还是看清了一些东西，自己也确实还有很大的问题。近半年以来确实有所膨胀，为了磨磨性子，就从这个博客开始吧，把步子迈小点儿，要不扯的蛋疼。","tags":[{"name":"博客","slug":"博客","permalink":"http://yoursite.com/tags/博客/"}]}]